---
- name: Verify stacks directory exists
  ansible.builtin.file:
    path: "/home/{{ ansible_user }}/stacks"
    state: directory
    mode: 0755

- name: Verify Portainer volume path
  ansible.builtin.file:
    path: "{{ portainer_gluster_mount_path }}/{{ portainer_gfs_subdir }}"
    state: directory
    mode: 0755

- name: Generate admin password hash
  # ansible.builtin.shell: echo $(htpasswd -nb {{ admin_user }} {{ admin_password }}) | sed -e s/\\$/\\$\\$/g
  # ansible.builtin.shell: echo {{ admin_user }}:$(openssl passwd -crypt {{ admin_password }}) | sed -e s/\\$/\\$\\$/g
  ansible.builtin.shell: |
    set -o pipefail
    echo $(htpasswd -nBb {{ portainer_admin_user }} {{ portainer_admin_password }}) | cut -d ":" -f 2 | sed -e s/\\$/\\$\\$/g
  args:
    executable: /bin/bash
  register: generated_password
  changed_when: false

- name: Create docker-compose stack file
  ansible.builtin.template:
    src: "{{ portainer_stack_name }}-stack-2.j2"
    dest: "/home/{{ ansible_user }}/stacks/{{ portainer_stack_name }}-stack.yml"
    mode: 0664

- name: Install required packages
  ansible.builtin.apt:
    name: "{{ portainer_apt_packages }}"
  when: ansible_os_family == 'Debian'

- name: Install required packages
  ansible.builtin.pip:
    name: "{{ portainer_pip_packages }}"
  when: ansible_os_family == 'Ubunbtu'

- name: Deploy stack from compose file
  community.docker.docker_stack:
    state: present
    name: "{{ portainer_stack_name }}"
    compose:
      - "/home/{{ ansible_user }}/stacks/{{ portainer_stack_name }}-stack.yml"
