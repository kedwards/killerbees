---
- name: "Create {{ stack_name }} stack"
  block:
    - name: Verify stacks directory exists
      ansible.builtin.file:
        path: "/home/{{ ansible_user }}/stacks"
        state: directory

    - name: Generate admin password hash
      ansible.builtin.shell: echo $(htpasswd -nb {{ admin_user }} {{ admin_password }}) | sed -e s/\\$/\\$\\$/g
      # ansible.builtin.shell: echo {{ admin_user }}:$(openssl passwd -crypt {{ admin_password }}) | sed -e s/\\$/\\$\\$/g
      # ansible.builtin.shell: echo $(htpasswd -nBb {{ admin_user }} {{ portainer_admin_password }}) | cut -d ":" -f 2 | sed -e s/\\$/\\$\\$/g
      register: generated_password

    - name: Create docker-compose stack file
      ansible.builtin.template:
        src: "{{ stack_name }}-stack.j2"
        dest: "/home/{{ ansible_user }}/stacks/{{ stack_name }}-stack.yml"
        mode: 0775

    - name: Install required packages
      ansible.builtin.apt:
        name: "{{ apt_packages }}"
        state: latest
        update_cache: yes
      when: ansible_os_family == 'Debian'

    - name: Install required packages
      ansible.builtin.pip:
        name: "{{ pip_packages }}"
      when: ansible_os_family == 'Ubunbtu'

    - name: Deploy stack from a compose file
      community.docker.docker_stack:
        state: present
        name: "{{ stack_name }}"
        compose:
          - "/home/{{ ansible_user }}/stacks/{{ stack_name }}-stack.yml"
  when: inventory_hostname == groups['swarm_managers'][0]
