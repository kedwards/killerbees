---
- name: Check if swarm has already been initialized
  shell: docker node ls
  register: swarm_status
  ignore_errors: true
  when: inventory_hostname == groups['swarm_managers'][0]

# - name: Get ip address of machine
#   ansible.builtin.set_fact:
#     swarm_ip: "{{ ansible_default_ipv4.address }}"
#   when: inventory_hostname

- name: Get enp0s8 IP address
  set_fact:
    addvertise_ip_addr: "{{ ansible_enp0s8.ipv4.address }}"
  when: ansible_enp0s8 is defined

# - name: Debug
#   debug:
#     msg: "Swarm IP is {{ swarm_ip }}"

# - name: Display enp0s8 IP
#   debug:
#     msg: "enp0s8 IP address: {{ enp0s8_ip }}"

- name: Initialize swarm leader
  shell: >
    docker swarm init
    --advertise-addr={{ addvertise_ip_addr }}:2377
  when: swarm_status.rc != 0 and inventory_hostname == groups['swarm_managers'][0]
  run_once: true

- name: Get the manager join-token
  shell: docker swarm join-token --quiet manager
  when: inventory_hostname == groups['swarm_managers'][0]
  register: manager_token

- name: Get the worker join-token
  shell: docker swarm join-token --quiet worker
  when: inventory_hostname == groups['swarm_managers'][0]
  register: worker_token

- name: Add managers
  include_role:
    name: docker-swarm-add-manager
  vars:
    join_token: "{{ hostvars[groups['swarm_managers'][0]]['manager_token']['stdout'] }}"
    join_address: "{{ groups['swarm_managers'][0] }}:2377"
  when: inventory_hostname != groups['swarm_managers'][0] and inventory_hostname in groups['swarm_managers']

- name: Add workers
  include_role:
    name: docker-swarm-add-worker
  vars:
    join_token: "{{ hostvars[groups['swarm_managers'][0]]['worker_token']['stdout'] }}"
    join_address: "{{ groups['swarm_managers'][0] }}:2377"
  when: inventory_hostname in groups['swarm_workers'] | default([])
