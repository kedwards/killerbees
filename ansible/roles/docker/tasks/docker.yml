---
- name: Create a temporary directory
  tempfile:
    state: directory
    suffix: tmp
  register: tmpdir
  changed_when: false

- name: Install python packages
  pip:
    name: docker
  when: ansible_distribution == 'Ubuntu'

- name: Install python packages
  ansible.builtin.apt:
    name:
      - python3-docker
    state: latest
    update_cache: yes
  when: ansible_distribution == 'Debian'

- name: Remove old versions of Docker
  apt:
    state: absent
    pkg:
      - docker
      - docker-engine
      - docker.io
      - containerd
      - runc
    force_apt_get: true

- name: Install docker
  block:
    - name: Get docker key
      shell: "curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -"

    # - name: Add Docker repository
    #   shell: add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"

    - name: Add Docker repository
      ansible.builtin.apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename | lower }} stable
      tags: docker
  when: ansible_distribution == 'Ubuntu'
  
- name: Install Docker
  apt:
    pkg:
      - docker.io
    state: present
    force_apt_get: true
    update_cache: yes

# - name: Add ansible_user user to docker group
#   shell: "adduser {{ ansible_user }} docker"

- name: Add user to docker group
  user:
    name: "{{ ansible_user }}"
    groups:
      - docker
    append: yes

- name: Start docker service, if not started
  ansible.builtin.service:
    name: docker
    state: started
    enabled: true
  ignore_errors: true

- name: Waiting for Docker service to become available
  ansible.builtin.wait_for:
    path: /var/run/docker.sock
